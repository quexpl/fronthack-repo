// Custom mixins

// Breakpoints
=breakpoint($min: null, $max: null)
  // Declare breakpoint value variables
  $min-width: null !default
  $max-width: null !default

  // Always interpret min value since it is cardinal.
  @if $min == lg or $min == lg-desktop
    $min-width: $screen-lg-min
  @else if $min == md or $min == desktop
    $min-width: $screen-md-min
  @else if $min == sm or $min == tablet
    $min-width: $screen-sm-min
  @else if $min == xs or $min == phone
    $min-width: $screen-xs-min
  @else if $min == xxs or $min == sm-phone
    $min-width: $screen-xxs-min

  // Interpret also max value if defined.
  @if $max
    @if $max == md or $max == desktop
      $max-width: $screen-md-max
    @else if $max == sm or $max == tablet
      $max-width: $screen-sm-max
    @else if $max == xs or $max == phone
      $max-width: $screen-xs-max
    @else if $max == xxs or $max == sm-phone
      $max-width: $screen-xxs-max

    // Render min and max breakpoint if both are defined
    @media (min-width: $min-width) and (max-width: $max-width)
      @content

  // Else render only min breakpoint
  @else
    @media (min-width: $min-width)
      @content


// Circle
=circle($background-color: $brand-primary, $border-width: 0, $border-color: $brand-primary)
  background-color: $background-color
  border: $border-width $border-color solid
  border-radius: 50%


// Placeholder color
=placeholder($color)
  &::-webkit-input-placeholder
    color: $color
  &:-moz-placeholder
    color: $color
  &::-moz-placeholder
    color: $color
  &:-ms-input-placeholder
    color: $color


// WAAT icon size
=icon-size($size)
  font-size: $size
  &::before
    bottom: $size / 4.5


// Use no-gutters mixin with make-row mixin to achieve grid without gutters.
=no-gutters
  margin-right: 0
  margin-left: 0
  & > [class^="col-"],
  & > [class*=" col-"],
  & > *
    padding-right: 0 !important
    padding-left: 0 !important


// Reset element placed inside container back to full browser width.
=full-width
  margin-left: -$grid-gutter-width / 2
  margin-right: -$grid-gutter-width / 2
  +breakpoint(tablet)
    margin-left: -100%
    margin-right: -100%

  & > *
    margin-left: auto !important
    margin-right: auto !important
    @extend .container-fluid


// Full cover background image.
=bg-cover($image, $position: top)
  background: url($image) center no-repeat
  background-position: $position
  background-size: cover

// Set of rows where content of all collums is vertically centered.
=middle-align
  display: table
  & > *
    display: table-row
    & > *
      display: table-cell
      vertical-align: middle
      &:not(:last-child)
        padding-right: 30px


// Colours half of a site background with specified color
=twoface-background($bg: $brand-primary-light, $side: "right")
  @media (max-width: $screen-xs-max)
    background-color: $bg
  +breakpoint(tablet)
    &:before
      content: ''
      position: fixed
      top: 0
      width: 50%
      height: 100%
      background-color: $bg
      z-index: -100
      @if $side == "right"
        right: 0
      @else
        left: 0


// Add triangle arrow to element with pseudoclasses.
=arrow($border-color: $gray-light, $bg-color: white, $side: "left", $direction: "in", $size: 25px, $distance: 50px)
  position: relative
  &:before
    z-index: $z-index-2
  &:after
    z-index: $z-index-1
  &:before,
  &:after
    content: ''
    display: block
    position: absolute
    width: 0
    height: 0
  // Top side
  @if $side == "top"
    border-top: 1px solid $border-color
    @if $direction == "in"
      // TODO: Top side in
    @else if $direction == "out"
      &:before
        right: $distance
        top: -$size + 1
        border-right: $size solid transparent
        border-left: $size solid transparent
        border-bottom: $size solid $bg-color
      &:after
        right: $distance - 1
        top: -$size - 1
        border-right: $size + 1 solid transparent
        border-left: $size + 1 solid transparent
        border-bottom: $size + 1 solid $border-color
  // Right side
  @if $side == "right"
    border-right: 1px solid $border-color
    @if $direction == "in"
      &:before
        top: $distance
        right: -1px
        border-top: $size solid transparent
        border-bottom: $size solid transparent
        border-right: $size solid $bg-color
      &:after
        top: $distance - 1
        right: -1px
        border-top: $size + 1 solid transparent
        border-bottom: $size + 1 solid transparent
        border-right: $size + 1 solid $border-color
    @else if $direction == "out"
      &:before
        top: $distance
        right: -$size + 1
        border-top: $size solid transparent
        border-bottom: $size solid transparent
        border-left: $size solid $bg-color
      &:after
        top: $distance - 1
        right: -$size - 1
        border-top: $size + 1 solid transparent
        border-bottom: $size + 1 solid transparent
        border-left: $size + 1 solid $border-color
  // Bottom side
  @if $side == "bottom"
    border-bottom: 1px solid $border-color
    @if $direction == "in"
      &:before
        right: $distance
        bottom: -1px
        border-right: $size solid transparent
        border-left: $size solid transparent
        border-bottom: $size solid $bg-color
      &:after
        right: $distance - 1
        bottom: 0
        border-right: $size + 1 solid transparent
        border-left: $size + 1 solid transparent
        border-bottom: $size + 1 solid $border-color
    @else if $direction == "out"
      &:before
        right: $distance
        bottom: -$size + 1
        border-right: $size solid transparent
        border-left: $size solid transparent
        border-top: $size solid $bg-color
      &:after
        right: $distance - 1
        bottom: -$size - 1
        border-right: $size + 1 solid transparent
        border-left: $size + 1 solid transparent
        border-top: $size + 1 solid $border-color
  // Left side
  @if $side == "left"
    border-left: 1px solid $border-color
    @if $direction == "in"
      &:before
        top: $distance
        left: -1px
        border-top: $size solid transparent
        border-bottom: $size solid transparent
        border-left: $size solid $bg-color
      &:after
        top: $distance - 1
        left: -1px
        border-top: $size + 1 solid transparent
        border-bottom: $size + 1 solid transparent
        border-left: $size + 1 solid $border-color
    @else if $direction == "out"
      &:before
        top: $distance
        left: -$size + 1
        border-top: $size solid transparent
        border-bottom: $size solid transparent
        border-right: $size solid $bg-color
      &:after
        top: $distance - 1
        left: -$size - 1
        border-top: $size + 1 solid transparent
        border-bottom: $size + 1 solid transparent
        border-right: $size + 1 solid $border-color
